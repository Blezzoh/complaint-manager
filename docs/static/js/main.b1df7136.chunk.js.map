{"version":3,"sources":["lib/data.js","components/main/complaintView.js","components/useful/labelledInput.js","components/main/newComplaint.js","components/main/me.js","components/main/container.js","App.js","serviceWorker.js","index.js"],"names":["random","int","Math","ceil","brands","statuses","generateData","data","i","concat","Object","toConsumableArray","brand","model","complaint","react_default","a","createElement","createdBy","createdOn","lastUpdatedDate","status","ComplaintView","_ref","showComplaint","click","Row","className","Col","lg","md","Form","Check","react_icons_kit","icon","ic_delete","size","Button","onClick","style","display","ListGroup","Item","LabelledInput","props","InputGroup","Prepend","Text","label","FormControl","as","placeholder","labels","NewComplaint","map","labelledInput","MeView","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","hideNewComplaint","visibleComplaint","index","setState","_this2","_this$state","id","variant","plus","aria-label","aria-describedby","Append","ic_search","width","newComplaint","d","main_complaintView","key","viewComplaint","Component","Main","Tab","Container","defaultActiveKey","class","sm","xs","Nav","Link","eventKey","ic_person_pin","Content","Pane","me","App","console","log","container_Main","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b1df7136.chunk.js","sourcesContent":["import React from 'react'\nconst random = (int)=>{\n    const random= Math.ceil(Math.random() * 10)\n    return random % int\n}\nconst brands = ['Cadillac', 'Subaru', 'Porche']\nconst statuses = ['unopened', 'opened', 'pending', 'solved', 'unresolved']\nexport const singleDataJson = () =>(\n        {\n            brand: brands[random(3)],\n            model: 'XS',\n        complaint: <div><h6>Door key doesnt work</h6><p> how can i repair this if ...</p></div>,\n        createdBy: 'admin',\n        createdOn: '12/12/2018',\n        lastUpdatedDate: '12/30/2018',\n        status: statuses[random(5)]\n    }\n)\nexport const generateData = (int)=>{\n    let data = []\n    for(let i = 0; i < int; i++){\n        data = [...data, singleDataJson()]\n    }\n    return data\n}","import React from 'react'\nimport {Row, Col, Form, Button, ListGroup} from 'react-bootstrap'\nimport {Icon} from 'react-icons-kit'\nimport { ic_delete } from 'react-icons-kit/md/ic_delete'\nimport '../../stylesheets/complaintView.scss'\n\nconst ComplaintView = ({ brand, model, complaint, createdBy, createdOn, lastUpdatedDate,status, showComplaint, click}) =>{\n    return (\n        <Row className={`complaint-view  complaint-view-${status? status: 'none'}`}>\n            <Col lg={1} md={1} className='complaint-view-check'>\n                <Form.Check />\n            </Col>\n            <Col lg={2} md={3}>\n                {brand ? brand: null} - {model? model: null}\n            </Col>\n            <Col lg={7} md={6} className='complaint-view-middle'>\n                <Row className='complaint-view-complaint'>{complaint}</Row>\n                <Row className='compaint-view-complaint-info'>\n                    <Col lg={3} md={3} className={` complaint-view-status` }>\n                        <span className={`${status? status: 'none'}`}>{status? status: null}</span>\n                    </Col>\n                    <Col lg={3} md={3} className='complaint-view-by'>created by: {createdBy? createdBy: null}</Col>\n                    <Col lg={3} md={3} className='complaint-view-on'>created on: {createdOn? createdOn : null}</Col>\n                    <Col lg={3} md={3} className='complaint-view-update'>last Updated date: {lastUpdatedDate ? lastUpdatedDate : null}</Col>\n                </Row>\n            </Col>\n            <Col lg={2} md={3} className='complaint-view-end'>\n                <Row className='complaint-view-delete'><Icon icon={ic_delete} size={24} /></Row>\n                <Row className='complaint-view-btn-area' ><Button className='complaint-view-btn-view' onClick={click}>{showComplaint? 'hide': 'view' }</Button></Row>\n            </Col>\n            <Col lg={12} md={12} style={{display: showComplaint? 'block' :'none'}}>\n                <ListGroup>\n                    <ListGroup.Item>complaint #: 1234</ListGroup.Item>\n                    <ListGroup.Item>Name: Blase Blezzoh Rdk</ListGroup.Item>\n                    <ListGroup.Item>Tel #: 1234567890</ListGroup.Item>\n                    <ListGroup.Item>Email: brdkBlezzoh@self.fr</ListGroup.Item>\n                    <ListGroup.Item>Brand: {brand}</ListGroup.Item>\n                    <ListGroup.Item>Model: XS</ListGroup.Item>\n                    <ListGroup.Item>Details: {complaint}</ListGroup.Item>\n                    <ListGroup.Item>Remarks: be careful!</ListGroup.Item>\n\n                </ListGroup>\n            </Col>\n        </Row>\n    )\n}\n\nexport default ComplaintView","import React from 'react'\nimport {InputGroup, FormControl} from 'react-bootstrap'\nconst LabelledInput =(props) =>{\n    return(\n        <InputGroup  size='sm'>\n            <InputGroup.Prepend>\n                <InputGroup.Text>{props.label}</InputGroup.Text>\n            </InputGroup.Prepend>\n            <FormControl size='sm' as={props.as? props.as:'input'}\n                placeholder={props.placeholder ? props.placeholder : ''}\n            />\n        </InputGroup>\n    )\n}\nexport default LabelledInput","import React, {Component} from 'react'\nimport LabelledInput from '../useful/labelledInput';\n\nconst labels = ['Complaint #', 'Full Name', 'Address', 'Tel #', 'Email', 'Product', 'Brand', 'Model',\n                'Model', 'Serial #', 'Assigned To', 'Closed Details', 'Closed Remarks']\nconst NewComplaint = ()=>{\n    return (\n        <div>\n        {\n            labels.map(\n                (label, i)=>{\n                    if (label === 'Closed Details' || label === 'Closed Remarks'){\n                        return <LabelledInput label={label} placeholder={label} as={'textarea'} />\n                    }\n                    return <LabelledInput label={label} />\n                }\n            )\n        }\n        </div>\n    )\n}\nexport default NewComplaint","import React, {Component} from 'react'\nimport {Row, Col,Button, InputGroup, FormControl} from 'react-bootstrap'\nimport { generateData } from '../../lib/data';\nimport ComplaintView from './complaintView';\nimport {Icon} from 'react-icons-kit'\nimport { ic_search } from 'react-icons-kit/md/ic_search'\nimport { plus } from 'react-icons-kit/icomoon/plus'\nimport NewComplaint from './newComplaint';\nimport '../../stylesheets/self.scss'\n\nclass MeView extends Component{\n    constructor(props){\n        super(props)\n        this.state ={\n            hideNewComplaint :true,\n            visibleComplaint: -1\n        }\n    }\n    viewComplaint(index){\n        if(this.state.visibleComplaint === index){\n            this.setState({visibleComplaint: -1})\n        }\n        else this.setState({visibleComplaint: index})\n    }\n    render() {\n        const {hideNewComplaint, visibleComplaint} = this.state\n        return (\n            <Row id='user-view'> \n                <Row>\n                    <Col lg={6} md={6}>\n                        <Button variant='outline-primary' size='sm' onClick={()=>this.setState({hideNewComplaint : false})}>\n                            <Icon id='new-compalint-icon' icon={plus} size={14} /> New Complaint\n                        </Button>\n                    </Col>\n                    <Col lg={6} md={6}>\n                        <InputGroup className=\"mb-3\" size='sm'>\n                            <FormControl\n                                placeholder=\"search ...\"\n                                aria-label=\"search\"\n                                aria-describedby=\"basic-addon2\"\n                            />\n                            <InputGroup.Append>\n                                <Button variant=\"outline-secondary\">\n                                    <Icon icon={ic_search} size={13} />\n                                </Button>\n                            </InputGroup.Append>\n                        </InputGroup>\n                    </Col>\n\n                </Row>\n                <Row style={{ width: '100%', display: (hideNewComplaint) ? 'none' : 'block'}} >\n                    <div><Button onClick={()=>this.setState({hideNewComplaint: true})}>-</Button></div>\n                    <NewComplaint />\n                </Row>\n                <Row style={{ display: (!hideNewComplaint) ? 'none' : 'block'}} id='assigned-complaints-view'>\n                    <h6> Assigned To Me</h6>\n                    {\n                        generateData(10).map(\n                            (d, i) => {\n                                return (\n                                    <ComplaintView key={i} brand={d.brand} lastUpdatedDate={d.lastUpdatedDate}\n                                        complaint={d.complaint} createdBy={d.createdBy} createdOn={d.createdOn}\n                                        model={d.model} status={d.status} showComplaint={visibleComplaint === i}\n                                        click={()=> this.viewComplaint(i)}\n                                    />\n                                )\n                            }\n                        )\n                    }\n                </Row>\n            </Row>\n        )\n    }\n}\n\nexport default MeView","import React, {Component} from 'react'\nimport {Tab, Row, Nav,Col} from 'react-bootstrap'\nimport { ic_person_pin } from 'react-icons-kit/md/ic_person_pin'\nimport {Icon} from 'react-icons-kit'\nimport MeView from './me';\nimport '../../stylesheets/main.scss'\n\nexport default class Main extends Component{\n    render(){\n        return(\n            <Tab.Container id=\"left-tabs-example\" defaultActiveKey=\"me\">\n                <Row class='main-row'>\n                    <Col lg={2} md={3} sm={12} xs={12} className='side-bar-container'>\n                        <h6 className='side-bar-title'>MENU</h6>\n                        <hr/>\n                        <Nav variant=\"pills\" className=\"flex-column\">\n                            <Nav.Item>\n                                <Nav.Link eventKey=\"me\">\n                                    <Icon icon={ic_person_pin} size={20}/>\n                                    Me\n                                </Nav.Link>\n                            </Nav.Item>\n                            <Nav.Item>\n                                <Nav.Link eventKey=\"organization\">Organization</Nav.Link>\n                            </Nav.Item>\n                            <Nav.Item>\n                                <Nav.Link eventKey=\"master\">Master</Nav.Link>\n                            </Nav.Item>\n                            <Nav.Item>\n                                <Nav.Link eventKey=\"admin\">Administration</Nav.Link>\n                            </Nav.Item>\n                            <Nav.Item>\n                                <Nav.Link eventKey=\"help\">Help</Nav.Link>\n                            </Nav.Item>\n                            <Nav.Item>\n                                <Nav.Link eventKey=\"logout\">\n                                    <button>\n                                        logout\n                                    </button>\n                                </Nav.Link>\n                            </Nav.Item>\n                        </Nav>\n                    </Col>\n                    <Col lg={10} md={9} sm={12} xs={12}>\n                        <Tab.Content>\n                            <Tab.Pane eventKey=\"me\">\n                                <MeView />\n                            </Tab.Pane>\n                            <Tab.Pane eventKey=\"organization\">\n                            </Tab.Pane>\n                            <Tab.Pane eventKey=\"master\">\n                            </Tab.Pane>\n                            <Tab.Pane eventKey=\"admin\">\n                            </Tab.Pane>\n                            <Tab.Pane eventKey=\"help\">\n                            </Tab.Pane>\n                            <Tab.Pane eventKey=\"second\">\n                            </Tab.Pane>\n                        </Tab.Content>\n                    </Col>\n                </Row>\n            </Tab.Container>\n        )\n    }\n}","import React, { Component } from 'react';\nimport './App.scss';\nimport 'bootstrap/dist/css/bootstrap.css'\nimport Main from './components/main/container';\nimport { generateData } from './lib/data';\nclass App extends Component {\n  render() {\n    console.log(generateData(2))\n    return (\n      <div className=\"App\">\n        <Main />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}